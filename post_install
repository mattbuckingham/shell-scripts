#!/bin/bash

VERBOSE=0

while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -v|--verbose)
    VERBOSE=1
    shift # past argument
    ;;
    *)    # unknown option
    shift # past argument
    ;;
esac
done

# Define a function to perform actions based on the verbose flag
function run_cmd {
    if [[ $VERBOSE -eq 0 ]]; then
        $@ > /dev/null || { echo "Command failed: $@"; exit 1; }
    else
        $@ || { echo "Command failed: $@"; exit 1; }
    fi
}

# check if shell is bash
if [ "$(echo $SHELL)" != "/bin/bash" ]; then
  if command -v chsh >/dev/null 2>&1; then
    echo "Changing shell to bash..."
    run_cmd chsh -s /bin/bash
  else
    echo "chsh command not found. Please manually change your shell to bash."
    exit 1
  fi
fi

# System Update and Upgrade
echo "Updating system packages..."
run_cmd sudo apt-get update
run_cmd sudo apt-get upgrade --allow-downgrades -y
echo "Installing software-properties-common package"
run_cmd sudo apt-get install -y apt-utils software-properties-common

# Install essential apps
echo "Installing essential apps..."
run_cmd sudo apt-get install -y curl git gcc make wget emacs python3 python3-pip htop openssh-client rsync netcat

# Check if .bashrc file exists
if [ ! -e ~/.bashrc ]; then
  # Create blank .bashrc file
  echo "Creating .bashrc file..."
  run_cmd touch ~/.bashrc
  echo "#!/bin/bash" >> ~/.bashrc
fi

# Add aliases to bashrc file
echo "Adding aliases to .bashrc file..."
echo "if [ -f ~/.bash_aliases ]; then" >> ~/.bashrc
echo "  . ~/.bash_aliases" >> ~/.bashrc
echo "fi" >> ~/.bashrc

# Download configs from github repo
echo "Downloading configs from GitHub repo..."
run_cmd curl https://raw.githubusercontent.com/bigBadMatt/shell-scripts/master/alias/.bash_aliases -o ~/.bash_aliases

# Source bash config
echo "Sourcing .bashrc file..."
run_cmd source ~/.bashrc

# Download Emacs config file
echo "Downloading Emacs config file..."
mkdir -p ~/.emacs.d
run_cmd curl https://raw.githubusercontent.com/bigBadMatt/shell-scripts/master/emacs/init.el -o ~/.emacs.d/init.el

# Clean up
echo "Cleaning up packages..."
run_cmd sudo apt-get install -f
run_cmd sudo apt-get autoremove -y
run_cmd sudo apt-get autoclean
run_cmd sudo apt-get clean

